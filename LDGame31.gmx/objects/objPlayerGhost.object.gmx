<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objDynamicParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>parent = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set to position on line corresponding to parent player

//var collide = instance_place(phy_position_x, phy_position_y, all);

var r = objCircle.radius;
var cX = objCircle.x;
var cY = objCircle.y;

var pX = parent.phy_position_x;
var pY = parent.phy_position_y;

var mX = pX - cX;
var mY = (pY - cX);

var theta = -1 * (arctan(mY / mX) + objCircleStart.theta);

if (cX &gt; pX) {
    if (cY &gt; pY) {
     //   theta *= -1;
    }
}

/*if (cX &lt; pX){ 
    theta += pi;
    if (cY &lt; pY) {
        theta =  -theta;
    } else {
        theta = -theta;
    }
}*/


xPos = theta * r;

show_debug_message(xPos);

mag = sqrt(power(pX - cX,2) + power(pY - cY,2));

yPos = r - mag;

phy_position_x = xPos;
phy_position_y = yPos;

/*
//if (collide != noone) {

//    if (collide.object_index == objTire || collide.object_index == objPlayer) {
        dx = parent.phy_position_x - parent.phy_position_xprevious;
        dy = parent.phy_position_y - parent.phy_position_yprevious;
        
        phy_position_x = phy_position_xprevious + dx;
        phy_position_y = phy_position_yprevious + dy;
        
        phy_linear_velocity_x = 0;
        phy_linear_velocity_y = 0;
        phy_angular_velocity = 0;
  //  }
//}
*/


/*
var theta;

var ghost = self.id;

with (parent) {
    var pX = phy_position_x;
    var pY = phy_position_y;
    
    var cX = objCircle.x;
    var cY = objCircle.y;
    var r = objCircle.radius;


    var mX = pX - cX;
    var mY = -(pY - cY);
       
    var mag = sqrt(mX * mX + mY * mY); 

    ghost.x = phy_position_x;
    ghost.y = phy_position_y;
    ghost.dist = r - mag;    
    
}

    theta = scrCalcTheta(x, y);

var retVal = scrCircleToLine(theta, dist);

nX = cos(theta) * r + cX;
nY = sin(theta) * r + cY;



phy_position_x = retVal[0];
phy_position_y = retVal[1];*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrawToCircle(self.id);

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
