<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setup variables

globalvar drawToLine;
globalvar distance;
globalvar player1;
globalvar player2;
globalvar cumulativeScore;

drawToLine = false;

distance = objFakeFloor.endX - objFakeFloor.beginX;

enemySpawnTimeMax = 10;
enemyCountMax = 3;
enemyCount = 0;
animalSpawnTimeMax = 5;
animalCountMax = 5;
animalCount = 0;

player1 = noone;
player2 = noone;
player1Score = 0;
player2Score = 0;
player1HighScore = 0;
player2HighScore = 0;
cumulativeScore = 0;

randomize();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set background scrolling speed
background_hspeed[0] = -0.3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start up music
var snd = audio_play_sound(musOmpTire, 100, true);
audio_sound_gain(snd, MUSICVOLUME, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemy Spawn Timer
if player1 != noone || player2 != noone
{
    if (enemyCount &lt; enemyCountMax)
    {
        instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objEnemySpider);
        enemyCount += 1;
    }
    alarm[2] = (irandom_range(1, enemySpawnTimeMax)) * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animal Spawn Timer
if player1 != noone || player2 != noone
{
    if (animalCount &lt; animalCountMax)
    {
        var goatType;
        goatType = choose(0,0,0,0,1,1,1,2,2,3);
        switch (goatType)
        {
            case 0:
                instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
                audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
                break;
            case 1:
                instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
                audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
                break;
            case 2:
                instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
                audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
                break;
            case 3:
                instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
                audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
                audio_play_sound(sndGoldenGoatSpawn, 111, false);
                break;
            default:
                instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
                audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
                break;
        }
        animalCount += 1;
    }
    alarm[1] = (irandom_range(1, animalSpawnTimeMax)) * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start the game
scrSetupGoatGoals();

cumulativeScore = 0;

/// Spawn default animals (1 of each type)
instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objAnimalGoatBrown);
audio_play_sound(choose(sndGoat1,sndGoat2,sndGoat3,sndGoat4), 110, false);
animalCount = 2;

instance_create(scrFindEmptySpawnPoint(), objFakeFloor.y, objEnemySpider);
enemyCount = 1;

/// Set spawn timers
alarm[1] = irandom_range(1, animalSpawnTimeMax) * room_speed;
alarm[2] = irandom_range(1, enemySpawnTimeMax) * room_speed;

// Play music if not playing already -- Micha TODO
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check player death

if player1 != noone
{
    if player1.hitPoints &lt;= 0
    {
        if player2 == noone
        {
            scrReleaseObject(player1, player1.animal);
            scrCleanUpGame();
        }
        else {
            scrReleaseObject(player1, player1.animal);
        }
            
        if player1.points &gt; player1HighScore
        {
            player1HighScore = player1.points;
        }
        with (player1)
        {
            instance_destroy();
        }
        player1 = noone;
    }
}

if player2 != noone
{
    if player2.hitPoints &lt;= 0
    {
        if player1 == noone
        {
            scrCleanUpGame();
        }
        if player2.points &gt; player2HighScore
        {
            player2HighScore = player2.points;
        }
        scrReleaseObject(player2, player2.animal)
        with (player2)
        {
            instance_destroy();
        }
        player2 = noone;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player score updating and difficulty

if (player1 != noone)
{
    player1Score = player1.points;
}

if (player2 != noone)
{
    player2Score = player2.points;
}


if cumulativeScore &gt;= 1500
{
    enemySpawnTimeMax = 10;
    animalSpawnTimeMax = 5;
    enemyCountMax = 5;
    animalCountMax = 5;
}
else if cumulativeScore &gt;= 1000
{
    enemySpawnTimeMax = 10;
    animalSpawnTimeMax = 5;
    enemyCountMax = 4;
    animalCountMax = 5;
}
else 
{
    enemySpawnTimeMax = 10;
    animalSpawnTimeMax = 5;
    enemyCountMax = 3;
    animalCountMax = 5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemy Control
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animal Control

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load player 1 into game
if player1 == noone
{
    player1 = instance_create(irandom(distance), objFakeFloor.y, objPlayerFemale);
    audio_play_sound(sndPlayerJoin, 110, false);
    if player2 == noone
    {
        alarm[0] = 2 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load player 2 into the game
if player2 == noone
{
    player2 = instance_create(irandom(distance), objFakeFloor.y, objPlayerMale);
    audio_play_sound(sndPlayerJoin, 110, false);
    if player1 == noone
    {
        alarm[0] = 2 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load player 1 into game
if player1 == noone
{
    player1 = instance_create(irandom(distance), objFakeFloor.y, objPlayerFemale);
    audio_play_sound(sndPlayerJoin, 110, false);
    if player2 == noone
    {
        alarm[0] = 2 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load player 2 into the game
if player2 == noone
{
    player2 = instance_create(irandom(distance), objFakeFloor.y, objPlayerMale);
    audio_play_sound(sndPlayerJoin, 110, false);
    if player1 == noone
    {
        alarm[0] = 2 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display score and player health
draw_set_halign(fa_left);
draw_set_font(fntStatus);
draw_text(10, 10, "Player 1");
if (player1 != noone)
{
    draw_text(10, 30, "Score: " + string(player1Score));
    draw_text(10, 50, "Hp: " + string(player1.hitPoints));
} else {
    draw_text(10, 30, "High Score: " + string(player1HighScore));
    draw_text(10, 50, "Press Action To Join!");
}

draw_set_halign(fa_right);
draw_text(room_width - 10, 10, "Player 2");
if (player2 != noone)
{
    draw_text(room_width - 10, 30, "Score: " + string(player2Score));
    draw_text(room_width - 10, 50, "Hp: " + string(player2.hitPoints));
} else {
    draw_text(room_width - 10, 30, "High Score: " + string(player2HighScore));
    draw_text(room_width - 10, 50, "Press Action To Join!");
}
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch draw to line
if (drawToLine) {
    drawToLine = false;
    /*
    objFakeFloor.phy_position_y += 1024;
    y += 1024;
    */
}    
else {
    drawToLine = true;
    /*
    objFakeFloor.phy_position_y -= 1024;
    y -= 1024;
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
